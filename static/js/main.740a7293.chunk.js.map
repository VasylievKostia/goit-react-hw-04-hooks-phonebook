{"version":3,"sources":["components/ContactList/ContactList.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["ContactList","contacts","onDeleteContacts","className","s","list","map","el","name","number","type","id","onClick","ContactsForm","onFormSubmit","useState","setName","setNumber","nameInputId","shortid","generate","numberInputId","resetState","section","onSubmit","event","preventDefault","obj","htmlFor","value","onChange","currentTarget","pattern","title","required","Filter","changeFilter","App","setContacts","filter","setFilter","useEffect","localData","JSON","parse","localStorage","getItem","setItem","stringify","prev","e","console","log","prevState","elem","target","contact","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.740a7293.chunk.js","sourcesContent":["import s from \"../ContactList/ContactList.module.css\"\r\n\r\nexport function ContactList({ contacts, onDeleteContacts }) {\r\n   \r\n        return <section>\r\n            \r\n        <ul className={s.list}>\r\n            {contacts.map((el) =>\r\n                <li key={el.id}>{el.name}: {el.number}\r\n                    <button\r\n                        type=\"button\"\r\n                        id={el.id}\r\n                        onClick={onDeleteContacts}\r\n                    >Delete</button>\r\n                </li>\r\n        )}\r\n    </ul>\r\n    </section>\r\n}\r\n","import { useState } from \"react\";\r\nimport shortid from 'shortid';\r\nimport s from '../ContactsForm/ContactsForm.module.css'\r\n\r\nexport function ContactsForm({onFormSubmit}) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate()\r\n\r\n  const  handleChangeInput = event => {\r\n     setName(event.currentTarget.value)\r\n  }\r\n  const handleChangeNumber = event => {\r\n      setNumber(event.currentTarget.value)\r\n  }\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const obj = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number\r\n    }\r\n\r\n      onFormSubmit(obj)\r\n    resetState()\r\n  }\r\n  const resetState = () => {\r\n    setNumber('')\r\n    setName('')\r\n  }\r\n  return <section className={s.section}>\r\n        <form onSubmit={handleSubmit}>\r\n            \r\n    <label htmlFor={nameInputId}> Name\r\n      <input\r\n      id={nameInputId}\r\n      type=\"text\"\r\n      name=\"name\"\r\n      value={name}\r\n      onChange={handleChangeInput}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      required/>\r\n      </label>\r\n          <br />\r\n          \r\n      <label htmlFor={numberInputId}>Number\r\n      <input\r\n        id={numberInputId}\r\n        value={number}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        onChange={handleChangeNumber}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        /></label>\r\n      <br />\r\n      <button type='submit'> Add Contact</button>\r\n        </form>\r\n        </section>\r\n    \r\n}\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ value, changeFilter }) => (\r\n  <>\r\n        <label >Find contacts by name</label>\r\n        <br/>\r\n    <input\r\n      \r\n      type=\"text\"\r\n      value={value}\r\n      onChange={changeFilter}\r\n    ></input>\r\n  </>\r\n);\r\n\r\nexport default Filter","\nimport './App.css';\nimport {useEffect, useState } from 'react';\nimport { ContactList } from './components/ContactList/ContactList.js';\nimport { ContactsForm } from './components/ContactsForm/ContactsForm'\nimport Filter  from \"./components/Filter/Filter\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ])\n  const [filter, setFilter] = useState('')\n  useEffect(() => {\n    const localData = JSON.parse(localStorage.getItem('data'))\n    if (localData) {\n      setContacts(localData);\n    }\n  }, [])\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(contacts))\n  }, [contacts])\n\n  const deleteContact = (e) => {\n    console.log('del')\n    setContacts((prevState) => {\n    return  prevState.filter((elem) => elem.id !== e.target.id)\n    }\n)}\nconst changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n};\n  const onFormSubmit = (obj) => {\n    setContacts(prev => {\n      return [...prev, obj]\n      \n    })\n  }\n const renderContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n };\n\n    return (<div className=\"App\">\n        <h1>PhoneBook</h1>\n        <ContactsForm onFormSubmit={onFormSubmit} />\n        <h2>Contacts</h2>\n        <Filter value={filter} changeFilter={changeFilter}/>\n        <ContactList\n          onDeleteContacts={deleteContact}\n           contacts={renderContacts()}\n        />\n    </div>\n  );\n  \n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2EERu\"};"],"sourceRoot":""}